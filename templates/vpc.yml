---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Module-A-VPC"

######################################################################
#  This template contains parameters and resources for creating a
#  a three layered, three zone Network Infrastructure in AWS within a VPC.
#  (Public Subnet for front end, Private Subnet for Applications,
#  Private Subnet for Databases)
#
#  List of resources created:
#                           1. VPC
#                           2. Public Subnet
#                           3. Private Subnet
#                           4. Internet Gateway
#                           5. Elastic IP (2 zones)
#                           6. NAT Gateway (2 zones)
#                           7. Route Tables
#                           8. Routes
#                           9. Parameter store parameters
#
#
######################################################################

Parameters:

  Env:
    Type: String
    Default: "development"

  VpcName:  # Parameters name of VPC
    Type: String
    Default: "VPC"

  VpcCidr:  # CIDR Range for VPC subnet range
    Type: String
    Default: "10.0.0.0/16"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PublicSubnetACidr:  # CIDR Range in first zone (named as PublicSubnetACidr)
    Type: String
    Default: "10.0.8.0/24"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PublicSubnetBCidr:  # CIDR Range in second zone (named as PublicSubnetBCidr)
    Type: String
    Default: "10.0.12.0/24"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PublicSubnetCCidr:  # CIDR Range in third zone (named as PublicSubnetCCidr)
    Type: String
    Default: "10.0.16.0/24"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetApplicationACidr:  # CIDR Range in first zone for application
    Type: String
    Default: "10.0.24.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetApplicationBCidr:  # CIDR Range in second zone for applicaiton
    Type: String
    Default: "10.0.32.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetApplicationCCidr:  # CIDR Range in third zone for application
    Type: String
    Default: "10.0.40.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetDatabaseACidr:   # CIDR Range in first zone for database
    Type: String
    Default: "10.0.48.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetDatabaseBCidr:   # CIDR Range in second zone for database
    Type: String
    Default: "10.0.56.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

  PrivateSubnetDatabaseCCidr:   # CIDR Range in third zone for database
    Type: String
    Default: "10.0.64.0/23"
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"

######################################################################
# Resource creation
######################################################################

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VpcName
        - Key: Environment
          Value: !Ref Env

  ######################################################################
  # Public Subnets
  ######################################################################

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetACidr
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PublicSubnetA
        - Key: Environment
          Value: !Ref Env

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetBCidr
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PublicSubnetB
        - Key: Environment
          Value: !Ref Env

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetCCidr
      AvailabilityZone: !Select [2, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PublicSubnetC
        - Key: Environment
          Value: !Ref Env

  ######################################################################
  # Private Subnets for Application and Databases
  ######################################################################

  PrivateSubnetApplicationA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetApplicationACidr
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetAppA
        - Key: Environment
          Value: !Ref Env

  PrivateSubnetApplicationB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetApplicationBCidr
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetAppB
        - Key: Environment
          Value: !Ref Env

  PrivateSubnetApplicationC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetApplicationCCidr
      AvailabilityZone: !Select [2, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetAppC
        - Key: Environment
          Value: !Ref Env

  PrivateSubnetDatabaseA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetDatabaseACidr
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetDatabaseA
        - Key: Environment
          Value: !Ref Env

  PrivateSubnetDatabaseB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetDatabaseBCidr
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetDatabaseB
        - Key: Environment
          Value: !Ref Env

  PrivateSubnetDatabaseC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetDatabaseCCidr
      AvailabilityZone: !Select [2, !GetAZs ""]
      Tags:
        - Key: Name
          Value: PrivateSubnetDatabaseC
        - Key: Environment
          Value: !Ref Env

  ######################################################################
  # Internet Gateway
  ######################################################################

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  ######################################################################
  # Elastic IP's
  ######################################################################
  NatGatewayPublicIpAddressA:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  NatGatewayPublicIpAddressB:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  ######################################################################
  # Nat Gateway's
  ######################################################################
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId:
        Fn::GetAtt:
          - NatGatewayPublicIpAddressA
          - AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags: 
        - Key: Name
          Value: NATGatewayA
        - Key: Environment
          Value: !Ref Env
  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId:
        Fn::GetAtt:
          - NatGatewayPublicIpAddressB
          - AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags: 
        - Key: Name
          Value: NATGatewayB
        - Key: Environment
          Value: !Ref Env

  ######################################################################
  # Route Tables
  ######################################################################

  PublicRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PublicRouteTableA
        - Key: Environment
          Value: !Ref Env

  PublicRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PublicRouteTableB
        - Key: Environment
          Value: !Ref Env

  PublicRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PublicRouteTableC
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableApplicationA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableApplicationA
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableApplicationB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableApplicationB
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableApplicationC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableApplicationC
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableDatabaseA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableDatabaseA
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableDatabaseB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableDatabaseB
        - Key: Environment
          Value: !Ref Env

  PrivateRouteTableDatabaseC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTableDatabaseC
        - Key: Environment
          Value: !Ref Env

  ######################################################################
  # Route Tables to Subnet Association
  ######################################################################

  PublicRouteTableToPublicSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      RouteTableId:
        Ref: PublicRouteTableA

  PublicRouteTableToPublicSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetB
      RouteTableId:
        Ref: PublicRouteTableB

  PublicRouteTableToPublicSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetC
      RouteTableId:
        Ref: PublicRouteTableC

  PrivateRouteTableApplicationAToPrivateSubnetApplicationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetApplicationA
      RouteTableId:
        Ref: PrivateRouteTableApplicationA

  PrivateRouteTableApplicationBToPrivateSubnetApplicationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetApplicationB
      RouteTableId:
        Ref: PrivateRouteTableApplicationB

  PrivateRouteTableApplicationBToPrivateSubnetApplicationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetApplicationC
      RouteTableId:
        Ref: PrivateRouteTableApplicationC

  PrivateRouteTableDatabaseAToPrivateSubnetDatabaseA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetDatabaseA
      RouteTableId:
        Ref: PrivateRouteTableDatabaseA

  PrivateRouteTableDatabaseBToPrivateSubnetDatabaseB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetDatabaseB
      RouteTableId:
        Ref: PrivateRouteTableDatabaseB

  PrivateRouteTableDatabaseBToPrivateSubnetDatabaseC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetDatabaseC
      RouteTableId:
        Ref: PrivateRouteTableDatabaseC

  ######################################################################
  # Routes
  ######################################################################

  RouteToInternetPublicA:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayToVPC
    Properties:
      RouteTableId:
        Ref: PublicRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  RouteToInternetPublicB:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayToVPC
    Properties:
      RouteTableId:
        Ref: PublicRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  RouteToInternetPublicC:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayToVPC
    Properties:
      RouteTableId:
        Ref: PublicRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  RouteToInternetApplicationA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableApplicationA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayA

  RouteToInternetApplicationB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableApplicationB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayB

  RouteToInternetDatabaseA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableDatabaseA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayA

  RouteToInternetDatabaseB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTableDatabaseB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGatewayB

  ######################################################################
  # Parameters for  some key resource created above
  ######################################################################

  VPCId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/vpc/id"
      Type: "String"
      Description: VPC Id
      Value: !Ref VPC

  ApplicationACidr:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/vpc/subnet/app/a/cidr"
      Type: "String"
      Description: Application A Cidr
      Value: !Ref PrivateSubnetApplicationACidr

  ApplicationBCidr:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/vpc/subnet/app/b/cidr"
      Type: "String"
      Description: Application B Cidr
      Value: !Ref PrivateSubnetApplicationBCidr

  DatabaseACidr:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/vpc/subnet/data/a/cidr"
      Type: "String"
      Description: Database A Cidr
      Value: !Ref PrivateSubnetDatabaseACidr

  DatabaseBCidr:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "/vpc/subnet/data/b/cidr"
      Type: "String"
      Description: Database B Cidr
      Value: !Ref PrivateSubnetDatabaseBCidr   

  PublicSubnetAId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/public/a/id"
      Type: "String"
      Description: PublicSubnetA Id
      Value: !Ref PublicSubnetA

  PublicSubnetBId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/public/b/id"
      Type: "String"
      Description: PublicSubnetB Id
      Value: !Ref PublicSubnetB

  PublicSubnetCId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/public/c/id"
      Type: "String"
      Description: PublicSubnetC Id
      Value: !Ref PublicSubnetC

  PrivateSubnetApplicationAId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/app/a/id"
      Type: "String"
      Description: PrivateSubnetApplicationA Id
      Value: !Ref PrivateSubnetApplicationA

  PrivateSubnetApplicationBId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/app/b/id"
      Type: "String"
      Description: PrivateSubnetApplicationB Id
      Value: !Ref PrivateSubnetApplicationB

  PrivateSubnetApplicationCId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/app/c/id"
      Type: "String"
      Description: PrivateSubnetApplicationC Id
      Value: !Ref PrivateSubnetApplicationC

  PrivateSubnetDatabaseAId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/data/a/id"
      Type: "String"
      Description: PrivateSubnetDatabaseA Id
      Value: !Ref PrivateSubnetDatabaseA

  PrivateSubnetDatabaseBId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/data/b/id"
      Type: "String"
      Description: PrivateSubnetDatabaseB Id
      Value: !Ref PrivateSubnetDatabaseB

  PrivateSubnetDatabaseCId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/vpc/subnet/private/data/c/id"
      Type: "String"
      Description: PrivateSubnetDatabaseC Id
      Value: !Ref PrivateSubnetDatabaseC
